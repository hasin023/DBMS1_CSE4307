DROP TABLE PREREQ CASCADE CONSTRAINTS;

DROP TABLE TIME_SLOT CASCADE CONSTRAINTS;

DROP TABLE ADVISOR CASCADE CONSTRAINTS;

DROP TABLE TAKES CASCADE CONSTRAINTS;

DROP TABLE STUDENT CASCADE CONSTRAINTS;

DROP TABLE TEACHES CASCADE CONSTRAINTS;

DROP TABLE SECTION CASCADE CONSTRAINTS;

DROP TABLE INSTRUCTOR CASCADE CONSTRAINTS;

DROP TABLE COURSE CASCADE CONSTRAINTS;

DROP TABLE DEPARTMENT CASCADE CONSTRAINTS;

DROP TABLE CLASSROOM CASCADE CONSTRAINTS;

CREATE TABLE CLASSROOM (
	BUILDING VARCHAR(15),
	ROOM_NUMBER VARCHAR(7),
	CAPACITY NUMERIC(4, 0),
	PRIMARY KEY (BUILDING, ROOM_NUMBER)
);

CREATE TABLE DEPARTMENT (
	DEPT_NAME VARCHAR(20),
	BUILDING VARCHAR(15),
	BUDGET NUMERIC(12, 2) CHECK (BUDGET > 0),
	PRIMARY KEY (DEPT_NAME)
);

CREATE TABLE COURSE (
	COURSE_ID VARCHAR(8),
	TITLE VARCHAR(50),
	DEPT_NAME VARCHAR(20),
	CREDITS NUMERIC(2, 0) CHECK (CREDITS > 0),
	PRIMARY KEY (COURSE_ID),
	FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT (DEPT_NAME) ON DELETE SET NULL
);

CREATE TABLE INSTRUCTOR (
	ID VARCHAR(5),
	NAME VARCHAR(20) NOT NULL,
	DEPT_NAME VARCHAR(20),
	SALARY NUMERIC(8, 2) CHECK (SALARY > 29000),
	PRIMARY KEY (ID),
	FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT (DEPT_NAME) ON DELETE SET NULL
);

CREATE TABLE SECTION (
	COURSE_ID VARCHAR(8),
	SEC_ID VARCHAR(8),
	SEMESTER VARCHAR(6) CHECK (SEMESTER IN ('Fall', 'Winter', 'Spring', 'Summer')),
	YEAR NUMERIC(4, 0) CHECK (YEAR > 1701 AND YEAR < 2100),
	BUILDING VARCHAR(15),
	ROOM_NUMBER VARCHAR(7),
	TIME_SLOT_ID VARCHAR(4),
	PRIMARY KEY (COURSE_ID, SEC_ID, SEMESTER, YEAR),
	FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID) ON DELETE CASCADE,
	FOREIGN KEY (BUILDING, ROOM_NUMBER) REFERENCES CLASSROOM (BUILDING, ROOM_NUMBER) ON DELETE SET NULL
);

CREATE TABLE TEACHES (
	ID VARCHAR(5),
	COURSE_ID VARCHAR(8),
	SEC_ID VARCHAR(8),
	SEMESTER VARCHAR(6),
	YEAR NUMERIC(4, 0),
	PRIMARY KEY (ID, COURSE_ID, SEC_ID, SEMESTER, YEAR),
	FOREIGN KEY (COURSE_ID, SEC_ID, SEMESTER, YEAR) REFERENCES SECTION (COURSE_ID, SEC_ID, SEMESTER, YEAR) ON DELETE CASCADE,
	FOREIGN KEY (ID) REFERENCES INSTRUCTOR (ID) ON DELETE CASCADE
);

CREATE TABLE STUDENT (
	ID VARCHAR(5),
	NAME VARCHAR(20) NOT NULL,
	DEPT_NAME VARCHAR(20),
	TOT_CRED NUMERIC(3, 0) CHECK (TOT_CRED >= 0),
	PRIMARY KEY (ID),
	FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT (DEPT_NAME) ON DELETE SET NULL
);

CREATE TABLE TAKES (
	ID VARCHAR(5),
	COURSE_ID VARCHAR(8),
	SEC_ID VARCHAR(8),
	SEMESTER VARCHAR(6),
	YEAR NUMERIC(4, 0),
	GRADE VARCHAR(2),
	PRIMARY KEY (ID, COURSE_ID, SEC_ID, SEMESTER, YEAR),
	FOREIGN KEY (COURSE_ID, SEC_ID, SEMESTER, YEAR) REFERENCES SECTION (COURSE_ID, SEC_ID, SEMESTER, YEAR) ON DELETE CASCADE,
	FOREIGN KEY (ID) REFERENCES STUDENT (ID) ON DELETE CASCADE
);

CREATE TABLE ADVISOR (
	S_ID VARCHAR(5),
	I_ID VARCHAR(5),
	PRIMARY KEY (S_ID),
	FOREIGN KEY (I_ID) REFERENCES INSTRUCTOR (ID) ON DELETE SET NULL,
	FOREIGN KEY (S_ID) REFERENCES STUDENT (ID) ON DELETE CASCADE
);

CREATE TABLE TIME_SLOT (
	TIME_SLOT_ID VARCHAR(4),
	DAY VARCHAR(1),
	START_HR NUMERIC(2) CHECK (START_HR >= 0 AND START_HR < 24),
	START_MIN NUMERIC(2) CHECK (START_MIN >= 0 AND START_MIN < 60),
	END_HR NUMERIC(2) CHECK (END_HR >= 0 AND END_HR < 24),
	END_MIN NUMERIC(2) CHECK (END_MIN >= 0 AND END_MIN < 60),
	PRIMARY KEY (TIME_SLOT_ID, DAY, START_HR, START_MIN)
);

CREATE TABLE PREREQ (
	COURSE_ID VARCHAR(8),
	PREREQ_ID VARCHAR(8),
	PRIMARY KEY (COURSE_ID, PREREQ_ID),
	FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID) ON DELETE CASCADE,
	FOREIGN KEY (PREREQ_ID) REFERENCES COURSE (COURSE_ID)
);